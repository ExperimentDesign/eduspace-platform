// <auto-generated />
using System;
using FULLSTACKFURY.EduSpace.API.Shared.Infrastructure.Persistence.EFC.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FULLSTACKFURY.EduSpace.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251007195737_AddTableVerificationCode")]
    partial class AddTableVerificationCode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.BreakdownManagement.Domain.Model.Aggregates.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("KindOfReport")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("kind_of_report");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int")
                        .HasColumnName("resource_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("p_k_reports");

                    b.ToTable("reports");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.EventsScheduling.Domain.Model.Aggregates.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("p_k_reservations");

                    b.ToTable("reservations");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.IAM.Domain.Model.Aggregates.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password_hash");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("p_k_accounts");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.IAM.Domain.Model.Aggregates.VerificationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("account_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("code");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expiration_date");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_used");

                    b.HasKey("Id")
                        .HasName("p_k_verification_codes");

                    b.HasIndex("AccountId")
                        .HasDatabaseName("i_x_verification_codes_account_id");

                    b.ToTable("verification_codes");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.Aggregates.AdminProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccountIdId")
                        .HasColumnType("int")
                        .HasColumnName("account_id_id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_admin_profiles");

                    b.HasIndex("AccountIdId")
                        .HasDatabaseName("i_x_admin_profiles_account_id_id");

                    b.ToTable("admin_profiles");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.Aggregates.TeacherProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("AccountIdId")
                        .HasColumnType("int")
                        .HasColumnName("account_id_id");

                    b.Property<int>("AdministratorId")
                        .HasColumnType("int")
                        .HasColumnName("administrator_id");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("created_at");

                    b.Property<DateTimeOffset?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("p_k_teacher_profiles");

                    b.HasIndex("AccountIdId")
                        .HasDatabaseName("i_x_teacher_profiles_account_id_id");

                    b.ToTable("teacher_profiles");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.ValueObjects.AccountId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("p_k_account_ids");

                    b.ToTable("account_ids");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.ReservationScheduling.Domain.Model.Aggregates.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("end_time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time(6)")
                        .HasColumnName("start_time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("p_k_meetings");

                    b.ToTable("meetings");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.ReservationScheduling.Domain.Model.Entities.MeetingSession", b =>
                {
                    b.Property<int>("MeetingId")
                        .HasColumnType("int")
                        .HasColumnName("meeting_id");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("teacher_id");

                    b.HasKey("MeetingId", "TeacherId")
                        .HasName("p_k_meeting_sessions");

                    b.HasIndex("TeacherId")
                        .HasDatabaseName("i_x_meeting_sessions_teacher_id");

                    b.ToTable("meeting_sessions");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.SpacesAndResourceManagement.Domain.Model.Aggregates.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_classrooms");

                    b.ToTable("classrooms");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.SpacesAndResourceManagement.Domain.Model.Aggregates.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int")
                        .HasColumnName("classroom_id");

                    b.Property<string>("KindOfResource")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("kind_of_resource");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_resources");

                    b.HasIndex("ClassroomId")
                        .HasDatabaseName("i_x_resources_classroom_id");

                    b.ToTable("resources");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.SpacesAndResourceManagement.Domain.Model.Aggregates.SharedArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("p_k_shared_areas");

                    b.ToTable("shared_areas");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.EventsScheduling.Domain.Model.Aggregates.Reservation", b =>
                {
                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.EventsScheduling.Domain.Model.ValueObjects.AreaId", "AreaId", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<int>("Identifier")
                                .HasColumnType("int")
                                .HasColumnName("area_id");

                            b1.HasKey("Id")
                                .HasName("p_k_reservations");

                            b1.ToTable("reservations");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_reservations_reservations_id");
                        });

                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.EventsScheduling.Domain.Model.ValueObjects.ReservationDate", "ReservationDate", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<DateTime>("End")
                                .HasColumnType("datetime(6)")
                                .HasColumnName("end");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("datetime(6)")
                                .HasColumnName("start");

                            b1.HasKey("Id")
                                .HasName("p_k_reservations");

                            b1.ToTable("reservations");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_reservations_reservations_id");
                        });

                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.EventsScheduling.Domain.Model.ValueObjects.TeacherId", "TeacherId", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<int>("TeacherIdentifier")
                                .HasColumnType("int")
                                .HasColumnName("teacher_id");

                            b1.HasKey("Id")
                                .HasName("p_k_reservations");

                            b1.ToTable("reservations");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_reservations_reservations_id");
                        });

                    b.Navigation("AreaId")
                        .IsRequired();

                    b.Navigation("ReservationDate")
                        .IsRequired();

                    b.Navigation("TeacherId")
                        .IsRequired();
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.IAM.Domain.Model.Aggregates.VerificationCode", b =>
                {
                    b.HasOne("FULLSTACKFURY.EduSpace.API.IAM.Domain.Model.Aggregates.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_verification_codes_accounts_account_id");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.Aggregates.AdminProfile", b =>
                {
                    b.HasOne("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.ValueObjects.AccountId", "AccountId")
                        .WithMany()
                        .HasForeignKey("AccountIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_admin_profiles__account_id_account_id_id");

                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.ValueObjects.ProfileName", "ProfileName", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("first_name");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("last_name");

                            b1.HasKey("Id")
                                .HasName("p_k_admin_profiles");

                            b1.ToTable("admin_profiles");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_admin_profiles_admin_profiles_id");
                        });

                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.ValueObjects.ProfilePrivateInformation", "ProfilePrivateInformation", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("address");

                            b1.Property<string>("Dni")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("dni");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("email");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("phone");

                            b1.HasKey("Id")
                                .HasName("p_k_admin_profiles");

                            b1.ToTable("admin_profiles");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_admin_profiles_admin_profiles_id");
                        });

                    b.Navigation("AccountId");

                    b.Navigation("ProfileName")
                        .IsRequired();

                    b.Navigation("ProfilePrivateInformation")
                        .IsRequired();
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.Aggregates.TeacherProfile", b =>
                {
                    b.HasOne("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.ValueObjects.AccountId", "AccountId")
                        .WithMany()
                        .HasForeignKey("AccountIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_teacher_profiles__account_id_account_id_id");

                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.ValueObjects.ProfileName", "ProfileName", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("first_name");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("last_name");

                            b1.HasKey("Id")
                                .HasName("p_k_teacher_profiles");

                            b1.ToTable("teacher_profiles");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_teacher_profiles_teacher_profiles_id");
                        });

                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.ValueObjects.ProfilePrivateInformation", "ProfilePrivateInformation", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("address");

                            b1.Property<string>("Dni")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("dni");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("email");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("phone");

                            b1.HasKey("Id")
                                .HasName("p_k_teacher_profiles");

                            b1.ToTable("teacher_profiles");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_teacher_profiles_teacher_profiles_id");
                        });

                    b.Navigation("AccountId");

                    b.Navigation("ProfileName")
                        .IsRequired();

                    b.Navigation("ProfilePrivateInformation")
                        .IsRequired();
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.ReservationScheduling.Domain.Model.Aggregates.Meeting", b =>
                {
                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.ReservationScheduling.Domain.Model.ValueObjects.AdministratorId", "AdministratorId", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<int>("AdministratorIdentifier")
                                .HasColumnType("int")
                                .HasColumnName("administrator_id");

                            b1.HasKey("Id")
                                .HasName("p_k_meetings");

                            b1.ToTable("meetings");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_meetings_meetings_id");
                        });

                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.ReservationScheduling.Domain.Model.ValueObjects.ClassroomId", "ClassroomId", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<int>("ClassroomIdentifier")
                                .HasColumnType("int")
                                .HasColumnName("classroom_id");

                            b1.HasKey("Id")
                                .HasName("p_k_meetings");

                            b1.ToTable("meetings");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_meetings_meetings_id");
                        });

                    b.Navigation("AdministratorId")
                        .IsRequired();

                    b.Navigation("ClassroomId")
                        .IsRequired();
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.ReservationScheduling.Domain.Model.Entities.MeetingSession", b =>
                {
                    b.HasOne("FULLSTACKFURY.EduSpace.API.ReservationScheduling.Domain.Model.Aggregates.Meeting", "Meeting")
                        .WithMany("MeetingParticipants")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_meeting_sessions_meetings_meeting_id");

                    b.HasOne("FULLSTACKFURY.EduSpace.API.Profiles.Domain.Model.Aggregates.TeacherProfile", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("f_k_meeting_sessions_teacher_profiles_teacher_id");

                    b.Navigation("Meeting");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.SpacesAndResourceManagement.Domain.Model.Aggregates.Classroom", b =>
                {
                    b.OwnsOne("FULLSTACKFURY.EduSpace.API.SpacesAndResourceManagement.Domain.Model.ValueObjects.TeacherId", "TeacherId", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasColumnName("id");

                            b1.Property<int>("TeacherIdentifier")
                                .HasColumnType("int")
                                .HasColumnName("teacher_id");

                            b1.HasKey("Id")
                                .HasName("p_k_classrooms");

                            b1.ToTable("classrooms");

                            b1.WithOwner()
                                .HasForeignKey("Id")
                                .HasConstraintName("f_k_classrooms_classrooms_id");
                        });

                    b.Navigation("TeacherId")
                        .IsRequired();
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.SpacesAndResourceManagement.Domain.Model.Aggregates.Resource", b =>
                {
                    b.HasOne("FULLSTACKFURY.EduSpace.API.SpacesAndResourceManagement.Domain.Model.Aggregates.Classroom", "Classroom")
                        .WithMany("Resources")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("f_k_resources_classrooms_classroom_id");

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.ReservationScheduling.Domain.Model.Aggregates.Meeting", b =>
                {
                    b.Navigation("MeetingParticipants");
                });

            modelBuilder.Entity("FULLSTACKFURY.EduSpace.API.SpacesAndResourceManagement.Domain.Model.Aggregates.Classroom", b =>
                {
                    b.Navigation("Resources");
                });
#pragma warning restore 612, 618
        }
    }
}
